<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <artifactId>open-bidder-samples</artifactId>
  <packaging>jar</packaging>
  <name>Open Bidder - Samples Project</name>

  <parent>
    <groupId>com.google.openbidder</groupId>
    <artifactId>openbidder</artifactId>
    <version>0.8.1</version>
  </parent>

  <dependencies>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4jVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guavaVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.google.inject</groupId>
      <artifactId>guice</artifactId>
      <version>${guiceVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.google.inject.extensions</groupId>
      <artifactId>guice-multibindings</artifactId>
      <version>${guiceVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>${protobufVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.google.http-client</groupId>
      <artifactId>google-http-client</artifactId>
      <version>${googleHttpClientVersion}</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.httpcomponents</groupId>
          <artifactId>httpclient</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.beust</groupId>
      <artifactId>jcommander</artifactId>
      <version>${jcommanderVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.codahale.metrics</groupId>
      <artifactId>metrics-core</artifactId>
      <version>${metricsVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${fasterxmlJacksonVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.google.openrtb</groupId>
      <artifactId>openrtb-core</artifactId>
      <version>${openrtbVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.google.doubleclick</groupId>
      <artifactId>doubleclick-core</artifactId>
      <version>${openrtbDoubleclickVersion}</version>
    </dependency>
    <dependency>
      <groupId>com.google.doubleclick</groupId>
      <artifactId>doubleclick-openrtb</artifactId>
      <version>${openrtbDoubleclickVersion}</version>
    </dependency>

    <dependency>
      <groupId>com.google.openbidder</groupId>
      <artifactId>open-bidder-api</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.openbidder</groupId>
      <artifactId>open-bidder-config</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.openbidder</groupId>
      <artifactId>open-bidder-bid</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.openbidder</groupId>
      <artifactId>open-bidder-impression</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.openbidder</groupId>
      <artifactId>open-bidder-http</artifactId>
      <version>${project.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.openbidder</groupId>
      <artifactId>open-bidder-util</artifactId>
      <version>${project.version}</version>
    </dependency>

    <dependency>
      <groupId>com.google.openbidder</groupId>
      <artifactId>open-bidder-server</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.openbidder</groupId>
      <artifactId>open-bidder-exchange-doubleclick</artifactId>
      <version>${project.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.openbidder</groupId>
      <artifactId>open-bidder-exchange-doubleclick</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.openbidder</groupId>
      <artifactId>open-bidder-api</artifactId>
      <version>${project.version}</version>
      <type>test-jar</type>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-classic</artifactId>
      <version>${logbackVersion}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>ch.qos.logback</groupId>
      <artifactId>logback-core</artifactId>
      <version>${logbackVersion}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.3.1</version>
    </dependency>
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>1.7</source>
          <target>1.7</target>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <executions>
          <execution>
            <phase>generate-sources</phase>
            <goals><goal>add-source</goal></goals>
            <configuration>
              <sources>
                <source>${protobufGenerated}</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!--
        If you use Cobertura for code coverage, this configuration is necessary
        so it excludes all that protoc-generated code... 
       -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <configuration>
          <format>xml</format>
          <format>html</format>
          <instrumentation>
            <excludes>
              <exclude>com/google/openbidder/sample/openrtbexchange/model/*.class</exclude>
            </excludes>
          </instrumentation>
        </configuration>
      </plugin>
    </plugins>
  </build>

  <profiles>
    <profile>
      <id>full</id>
      <activation>
        <property>
          <!--
            For Eclipse IDE users with m2e-generated projects: Ignore all this stuff.
            M2E is incompatible with some plugins. You need to make a full build
            (mvn install) before loading the IDE, so protoc-generated code will exist.
          -->
          <name>!m2e.version</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <!--
              The next plugin needs include files from a source file from another
              project that's on github (Google's core OpenRTB library).
            -->
            <groupId>com.googlecode.maven-download-plugin</groupId>
            <artifactId>download-maven-plugin</artifactId>
            <executions>
              <execution>
                <id>include-openrtb-proto</id>
                <phase>initialize</phase>
                <goals>
                  <goal>wget</goal>
                </goals>
                <configuration>
                  <url>${openrtbSource}/openrtb-core/src/main/protobuf/openrtb.proto</url>
                  <outputDirectory>${protobufGenerated}/include</outputDirectory>
                </configuration>
              </execution>
              <execution>
                <id>include-openrtb-native-proto</id>
                <phase>initialize</phase>
                <goals>
                  <goal>wget</goal>
                </goals>
                <configuration>
                  <url>${openrtbSource}/openrtb-core/src/main/protobuf/openrtb-native.proto</url>
                  <outputDirectory>${protobufGenerated}/include</outputDirectory>
                </configuration>
              </execution>
            </executions>
          </plugin>

          <plugin>
            <!--
              Protocol Buffers don't provide an (official) Maven plugin for protoc.
              Several third-party options for this are available for this, see:
              https://code.google.com/p/protobuf/wiki/ThirdPartyAddOns
              But you can just use the mavn-antrun-plugin and build-helper-maven-plugin. 
             -->
            <artifactId>maven-antrun-plugin</artifactId>
            <executions>
              <execution>
                <id>compile-protoc</id>
                <phase>generate-sources</phase>
                <configuration>
                  <target>
                    <mkdir dir="${protobufGenerated}" />
                    <path id="proto.path">
                      <fileset dir="${protobufSource}">
                        <include name="**/*.proto" />
                      </fileset>
                    </path>
                    <pathconvert pathsep=" " property="proto.files" refid="proto.path" />
                    <exec executable="protoc" failonerror="true">
                      <arg value="--java_out=${protobufGenerated}" />
                      <arg value="-I${protobufSource}" />
                      <arg value="-I${protobufGenerated}/include" />
                      <arg line="${proto.files}" />
                    </exec>
                  </target>
                </configuration>
                <goals>
                  <goal>run</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

</project>
